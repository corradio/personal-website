{"version":3,"sources":["webpack:///./src/components/post.js","webpack:///./src/pages/blog.js"],"names":["Tag","styled","span","withConfig","displayName","componentId","_ref","title","href","to","date","description","key","tags","React","createElement","style","marginBottom","Link","boxShadow","map","tag","marginTop","rhythm","dangerouslySetInnerHTML","__html","data","location","posts","allMarkdownRemark","edges","Layout","SEO","_ref2","node","frontmatter","fields","slug","Post","excerpt"],"mappings":"4FAAA,6DAMMA,EAAMC,IAAOC,KAAIC,WAAA,CAAAC,YAAA,YAAAC,YAAA,eAAXJ,CAAW,8GASR,aAAAK,GAAA,IACbC,EAAKD,EAALC,MAAOC,EAAIF,EAAJE,KAAMC,EAAEH,EAAFG,GAAIC,EAAIJ,EAAJI,KAAMC,EAAWL,EAAXK,YAAaC,EAAGN,EAAHM,IAAKC,EAAIP,EAAJO,KAAI,OAE7CC,IAAAC,cAAA,WAASH,IAAKA,GACZE,IAAAC,cAAA,cACED,IAAAC,cAAA,MAAIC,MAAO,CAAEC,aAAc,IACxBR,EACCK,IAAAC,cAACG,IAAI,CAACF,MAAO,CAAEG,UAAW,QAAUV,GAAIA,GACrCF,GAED,KACHC,EACCM,IAAAC,cAAA,KAAGC,MAAO,CAAEG,UAAW,QAAUX,KAAMA,GACpCD,GAED,MAENO,IAAAC,cAAA,WACGL,EAAOI,IAAAC,cAAA,aAAQL,GAAgB,KAAK,KAEnCG,GAAQ,IAAIO,KAAI,SAAAC,GAAG,OACnBP,IAAAC,cAACf,EAAG,KAAEqB,QAIZP,IAAAC,cAAA,WAASC,MAAO,CAAEM,UAAWC,YAAO,EAAI,KACtCT,IAAAC,cAAA,KACES,wBAAyB,CACvBC,OAAQd,S,kCC3ClB,gFASe,mBAAAL,GAAyB,IAAtBoB,EAAIpB,EAAJoB,KAAMC,EAAQrB,EAARqB,SAChBC,EAAQF,EAAKG,kBAAkBC,MACrC,OACEhB,IAAAC,cAACgB,IAAM,CAACJ,SAAUA,GAChBb,IAAAC,cAACiB,IAAG,CACFzB,MAAM,2BAGRO,IAAAC,cAAA,MAAIC,MAAO,CAAEM,UAAWC,YAAO,KAAM,cACpCK,EAAMR,KAAI,SAAAa,GAAe,IAAZC,EAAID,EAAJC,KACN3B,EAAQ2B,EAAKC,YAAY5B,OAAS2B,EAAKE,OAAOC,KACpD,OACEvB,IAAAC,cAACuB,IAAI,CACH/B,MAAOA,EACPK,IAAKsB,EAAKE,OAAOC,KACjB5B,GAAE,QAAUyB,EAAKE,OAAOC,KACxB3B,KAAMwB,EAAKC,YAAYzB,KACvBC,YAAauB,EAAKC,YAAYxB,aAAeuB,EAAKK,QAClD1B,KAAMqB,EAAKC,YAAYtB","file":"component---src-pages-blog-js-a073df945de4ced045c4.js","sourcesContent":["import React from 'react';\nimport { Link } from 'gatsby';\nimport styled from 'styled-components';\n\nimport { rhythm } from '../utils/typography';\n\nconst Tag = styled.span`\n  background-color: #e0ddff;\n  color: black;\n  padding: 2px 8px;\n  border-radius: 8px;\n  font-size: small;\n  margin-right: 3px;\n`;\n\nexport default ({\n  title, href, to, date, description, key, tags,\n}) => (\n  <article key={key}>\n    <header>\n      <h3 style={{ marginBottom: 0 }}>\n        {to ? (\n          <Link style={{ boxShadow: 'none' }} to={to}>\n            {title}\n          </Link>\n        ) : null}\n        {href ? (\n          <a style={{ boxShadow: 'none' }} href={href}>\n            {title}\n          </a>\n        ) : null}\n      </h3>\n      <div>\n        {date ? <small>{date}</small> : null}\n        &nbsp;\n        {(tags || []).map(tag => (\n          <Tag>{tag}</Tag>\n        ))}\n      </div>\n    </header>\n    <section style={{ marginTop: rhythm(1 / 4) }}>\n      <p\n        dangerouslySetInnerHTML={{\n          __html: description,\n        }}\n      />\n    </section>\n  </article>\n);\n","import React from 'react';\n\nimport { graphql } from 'gatsby';\n\nimport Layout from '../components/layout';\nimport Post from '../components/post';\nimport SEO from '../components/seo';\nimport { rhythm } from '../utils/typography';\n\nexport default ({ data, location }) => {\n  const posts = data.allMarkdownRemark.edges;\n  return (\n    <Layout location={location}>\n      <SEO\n        title=\"Olivier Corradi | Blog\"\n      />\n\n      <h1 style={{ marginTop: rhythm(2) }}>Blog posts</h1>\n      {posts.map(({ node }) => {\n        const title = node.frontmatter.title || node.fields.slug;\n        return (\n          <Post\n            title={title}\n            key={node.fields.slug}\n            to={`/blog${node.fields.slug}`}\n            date={node.frontmatter.date}\n            description={node.frontmatter.description || node.excerpt}\n            tags={node.frontmatter.tags}\n          />\n        );\n      })}\n\n    </Layout>\n  );\n};\n\nexport const pageQuery = graphql`\n  query {\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            description\n            tags\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}