{"version":3,"sources":["webpack:///./node_modules/d3-fetch/src/text.js","webpack:///./node_modules/d3-dsv/src/dsv.js","webpack:///./node_modules/d3-array/src/ascending.js","webpack:///./node_modules/d3-array/src/bisector.js","webpack:///./node_modules/d3-array/src/bisect.js","webpack:///./node_modules/d3-array/src/cross.js","webpack:///./node_modules/d3-array/src/descending.js","webpack:///./node_modules/d3-array/src/number.js","webpack:///./node_modules/d3-array/src/array.js","webpack:///./node_modules/d3-array/src/range.js","webpack:///./node_modules/d3-array/src/ticks.js","webpack:///./node_modules/d3-array/src/threshold/sturges.js","webpack:///./node_modules/d3-array/src/quantile.js","webpack:///./node_modules/d3-array/src/mean.js","webpack:///./node_modules/d3-array/src/sum.js"],"names":["responseText","response","ok","Error","status","statusText","text","fetch","input","init","then","EOL","EOF","objectConverter","columns","Function","map","name","i","JSON","stringify","join","inferColumns","rows","columnSet","Object","create","forEach","row","column","push","pad","value","width","s","length","Array","formatDate","date","year","hours","getUTCHours","minutes","getUTCMinutes","seconds","getUTCSeconds","milliseconds","getUTCMilliseconds","isNaN","getUTCFullYear","getUTCMonth","getUTCDate","reFormat","RegExp","delimiter","DELIMITER","charCodeAt","parseRows","f","t","N","I","n","eof","eol","token","c","j","slice","replace","preformatBody","formatValue","formatRow","Date","test","parse","convert","object","customConverter","format","concat","formatBody","formatRows","a","b","NaN","compare","d","x","ascending","left","lo","hi","mid","right","ascendingBisect","bisector","bisectRight","bisect","prototype","start","stop","step","arguments","Math","max","ceil","range","e10","sqrt","e5","e2","reverse","ticks","count","tickIncrement","isFinite","floor","power","log","LN10","error","pow","tickStep","step0","abs","step1","valueof","number","values","p","i0","value0","m","sum"],"mappings":"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","file":"component---src-pages-climate-change-graphs-temp-annomalies-js-88ce4b231a26811d1ec5.js","sourcesContent":["function responseText(response) {\n  if (!response.ok) throw new Error(response.status + \" \" + response.statusText);\n  return response.text();\n}\nexport default function (input, init) {\n  return fetch(input, init).then(responseText);\n}","var EOL = {},\n  EOF = {},\n  QUOTE = 34,\n  NEWLINE = 10,\n  RETURN = 13;\nfunction objectConverter(columns) {\n  return new Function(\"d\", \"return {\" + columns.map(function (name, i) {\n    return JSON.stringify(name) + \": d[\" + i + \"] || \\\"\\\"\";\n  }).join(\",\") + \"}\");\n}\nfunction customConverter(columns, f) {\n  var object = objectConverter(columns);\n  return function (row, i) {\n    return f(object(row), i, columns);\n  };\n}\n\n// Compute unique columns in order of discovery.\nfunction inferColumns(rows) {\n  var columnSet = Object.create(null),\n    columns = [];\n  rows.forEach(function (row) {\n    for (var column in row) {\n      if (!(column in columnSet)) {\n        columns.push(columnSet[column] = column);\n      }\n    }\n  });\n  return columns;\n}\nfunction pad(value, width) {\n  var s = value + \"\",\n    length = s.length;\n  return length < width ? new Array(width - length + 1).join(0) + s : s;\n}\nfunction formatYear(year) {\n  return year < 0 ? \"-\" + pad(-year, 6) : year > 9999 ? \"+\" + pad(year, 6) : pad(year, 4);\n}\nfunction formatDate(date) {\n  var hours = date.getUTCHours(),\n    minutes = date.getUTCMinutes(),\n    seconds = date.getUTCSeconds(),\n    milliseconds = date.getUTCMilliseconds();\n  return isNaN(date) ? \"Invalid Date\" : formatYear(date.getUTCFullYear(), 4) + \"-\" + pad(date.getUTCMonth() + 1, 2) + \"-\" + pad(date.getUTCDate(), 2) + (milliseconds ? \"T\" + pad(hours, 2) + \":\" + pad(minutes, 2) + \":\" + pad(seconds, 2) + \".\" + pad(milliseconds, 3) + \"Z\" : seconds ? \"T\" + pad(hours, 2) + \":\" + pad(minutes, 2) + \":\" + pad(seconds, 2) + \"Z\" : minutes || hours ? \"T\" + pad(hours, 2) + \":\" + pad(minutes, 2) + \"Z\" : \"\");\n}\nexport default function (delimiter) {\n  var reFormat = new RegExp(\"[\\\"\" + delimiter + \"\\n\\r]\"),\n    DELIMITER = delimiter.charCodeAt(0);\n  function parse(text, f) {\n    var convert,\n      columns,\n      rows = parseRows(text, function (row, i) {\n        if (convert) return convert(row, i - 1);\n        columns = row, convert = f ? customConverter(row, f) : objectConverter(row);\n      });\n    rows.columns = columns || [];\n    return rows;\n  }\n  function parseRows(text, f) {\n    var rows = [],\n      // output rows\n      N = text.length,\n      I = 0,\n      // current character index\n      n = 0,\n      // current line number\n      t,\n      // current token\n      eof = N <= 0,\n      // current token followed by EOF?\n      eol = false; // current token followed by EOL?\n\n    // Strip the trailing newline.\n    if (text.charCodeAt(N - 1) === NEWLINE) --N;\n    if (text.charCodeAt(N - 1) === RETURN) --N;\n    function token() {\n      if (eof) return EOF;\n      if (eol) return eol = false, EOL;\n\n      // Unescape quotes.\n      var i,\n        j = I,\n        c;\n      if (text.charCodeAt(j) === QUOTE) {\n        while (I++ < N && text.charCodeAt(I) !== QUOTE || text.charCodeAt(++I) === QUOTE);\n        if ((i = I) >= N) eof = true;else if ((c = text.charCodeAt(I++)) === NEWLINE) eol = true;else if (c === RETURN) {\n          eol = true;\n          if (text.charCodeAt(I) === NEWLINE) ++I;\n        }\n        return text.slice(j + 1, i - 1).replace(/\"\"/g, \"\\\"\");\n      }\n\n      // Find next delimiter or newline.\n      while (I < N) {\n        if ((c = text.charCodeAt(i = I++)) === NEWLINE) eol = true;else if (c === RETURN) {\n          eol = true;\n          if (text.charCodeAt(I) === NEWLINE) ++I;\n        } else if (c !== DELIMITER) continue;\n        return text.slice(j, i);\n      }\n\n      // Return last token before EOF.\n      return eof = true, text.slice(j, N);\n    }\n    while ((t = token()) !== EOF) {\n      var row = [];\n      while (t !== EOL && t !== EOF) row.push(t), t = token();\n      if (f && (row = f(row, n++)) == null) continue;\n      rows.push(row);\n    }\n    return rows;\n  }\n  function preformatBody(rows, columns) {\n    return rows.map(function (row) {\n      return columns.map(function (column) {\n        return formatValue(row[column]);\n      }).join(delimiter);\n    });\n  }\n  function format(rows, columns) {\n    if (columns == null) columns = inferColumns(rows);\n    return [columns.map(formatValue).join(delimiter)].concat(preformatBody(rows, columns)).join(\"\\n\");\n  }\n  function formatBody(rows, columns) {\n    if (columns == null) columns = inferColumns(rows);\n    return preformatBody(rows, columns).join(\"\\n\");\n  }\n  function formatRows(rows) {\n    return rows.map(formatRow).join(\"\\n\");\n  }\n  function formatRow(row) {\n    return row.map(formatValue).join(delimiter);\n  }\n  function formatValue(value) {\n    return value == null ? \"\" : value instanceof Date ? formatDate(value) : reFormat.test(value += \"\") ? \"\\\"\" + value.replace(/\"/g, \"\\\"\\\"\") + \"\\\"\" : value;\n  }\n  return {\n    parse: parse,\n    parseRows: parseRows,\n    format: format,\n    formatBody: formatBody,\n    formatRows: formatRows,\n    formatRow: formatRow,\n    formatValue: formatValue\n  };\n}","export default function (a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}","import ascending from \"./ascending\";\nexport default function (compare) {\n  if (compare.length === 1) compare = ascendingComparator(compare);\n  return {\n    left: function left(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) < 0) lo = mid + 1;else hi = mid;\n      }\n      return lo;\n    },\n    right: function right(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) > 0) hi = mid;else lo = mid + 1;\n      }\n      return lo;\n    }\n  };\n}\nfunction ascendingComparator(f) {\n  return function (d, x) {\n    return ascending(f(d), x);\n  };\n}","import ascending from \"./ascending\";\nimport bisector from \"./bisector\";\nvar ascendingBisect = bisector(ascending);\nexport var bisectRight = ascendingBisect.right;\nexport var bisectLeft = ascendingBisect.left;\nexport default bisectRight;","import { pair } from \"./pairs\";\nexport default function (values0, values1, reduce) {\n  var n0 = values0.length,\n    n1 = values1.length,\n    values = new Array(n0 * n1),\n    i0,\n    i1,\n    i,\n    value0;\n  if (reduce == null) reduce = pair;\n  for (i0 = i = 0; i0 < n0; ++i0) {\n    for (value0 = values0[i0], i1 = 0; i1 < n1; ++i1, ++i) {\n      values[i] = reduce(value0, values1[i1]);\n    }\n  }\n  return values;\n}","export default function (a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n}","export default function (x) {\n  return x === null ? NaN : +x;\n}","var array = Array.prototype;\nexport var slice = array.slice;\nexport var map = array.map;","export default function (start, stop, step) {\n  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n  var i = -1,\n    n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n    range = new Array(n);\n  while (++i < n) {\n    range[i] = start + i * step;\n  }\n  return range;\n}","var e10 = Math.sqrt(50),\n  e5 = Math.sqrt(10),\n  e2 = Math.sqrt(2);\nexport default function (start, stop, count) {\n  var reverse,\n    i = -1,\n    n,\n    ticks,\n    step;\n  stop = +stop, start = +start, count = +count;\n  if (start === stop && count > 0) return [start];\n  if (reverse = stop < start) n = start, start = stop, stop = n;\n  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];\n  if (step > 0) {\n    start = Math.ceil(start / step);\n    stop = Math.floor(stop / step);\n    ticks = new Array(n = Math.ceil(stop - start + 1));\n    while (++i < n) ticks[i] = (start + i) * step;\n  } else {\n    start = Math.floor(start * step);\n    stop = Math.ceil(stop * step);\n    ticks = new Array(n = Math.ceil(start - stop + 1));\n    while (++i < n) ticks[i] = (start - i) / step;\n  }\n  if (reverse) ticks.reverse();\n  return ticks;\n}\nexport function tickIncrement(start, stop, count) {\n  var step = (stop - start) / Math.max(0, count),\n    power = Math.floor(Math.log(step) / Math.LN10),\n    error = step / Math.pow(10, power);\n  return power >= 0 ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power) : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);\n}\nexport function tickStep(start, stop, count) {\n  var step0 = Math.abs(stop - start) / Math.max(0, count),\n    step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n    error = step0 / step1;\n  if (error >= e10) step1 *= 10;else if (error >= e5) step1 *= 5;else if (error >= e2) step1 *= 2;\n  return stop < start ? -step1 : step1;\n}","export default function (values) {\n  return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\n}","import number from \"./number\";\nexport default function (values, p, valueof) {\n  if (valueof == null) valueof = number;\n  if (!(n = values.length)) return;\n  if ((p = +p) <= 0 || n < 2) return +valueof(values[0], 0, values);\n  if (p >= 1) return +valueof(values[n - 1], n - 1, values);\n  var n,\n    i = (n - 1) * p,\n    i0 = Math.floor(i),\n    value0 = +valueof(values[i0], i0, values),\n    value1 = +valueof(values[i0 + 1], i0 + 1, values);\n  return value0 + (value1 - value0) * (i - i0);\n}","import number from \"./number\";\nexport default function (values, valueof) {\n  var n = values.length,\n    m = n,\n    i = -1,\n    value,\n    sum = 0;\n  if (valueof == null) {\n    while (++i < n) {\n      if (!isNaN(value = number(values[i]))) sum += value;else --m;\n    }\n  } else {\n    while (++i < n) {\n      if (!isNaN(value = number(valueof(values[i], i, values)))) sum += value;else --m;\n    }\n  }\n  if (m) return sum / m;\n}","export default function (values, valueof) {\n  var n = values.length,\n    i = -1,\n    value,\n    sum = 0;\n  if (valueof == null) {\n    while (++i < n) {\n      if (value = +values[i]) sum += value; // Note: zero and null are equivalent.\n    }\n  } else {\n    while (++i < n) {\n      if (value = +valueof(values[i], i, values)) sum += value;\n    }\n  }\n  return sum;\n}"],"sourceRoot":""}