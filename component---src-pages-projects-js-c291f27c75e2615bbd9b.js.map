{"version":3,"file":"component---src-pages-projects-js-c291f27c75e2615bbd9b.js","mappings":"2MAEA,MAEaA,EAAiB,CAC5BC,WAAY,CAEVC,GAAI,CAAEC,KAAM,OAAQC,OAAQ,EAAGC,QAAS,KACxCC,GAAI,CAAEH,KAAM,OAAQC,OAAQ,EAAGC,QAAS,KAExCE,GAAI,CAAEJ,KAAM,QAASC,OAAQ,EAAGC,QAAS,MAE3CG,UAAW,CACTC,GAAI,CACFN,KAAM,YACNE,QAAS,IACTK,eAAgB,KAChBC,UAAW,MAGbC,GAAI,CACFT,KAAM,UACNE,QAAS,IACTQ,UAAW,CAAC,MACZH,eAAgB,KAChBC,UAAW,MAEbG,GAAI,CACFX,KAAM,UACNE,QAAS,IAETK,eAAgB,KAChBC,UAAW,QAKXI,EAAY,CAChBC,MAAO,UACPC,KAAM,UACNC,MAAO,UACP,gBAAiB,UACjBC,QAAS,YACT,kBAAmB,UACnBC,QAAS,UACTC,WAAY,SACZC,QAAS,UACTC,IAAK,UACLC,KAAM,UACNC,IAAK,UACLC,QAAS,WAGLC,EAAgBC,IACpB,MAAMC,EAAS,CAAC,EAgBhB,OAfAC,OAAOC,QAAQH,GAAQI,SAAQC,IAAa,IAAXC,EAAGC,GAAEF,EACpCH,OAAOC,QAAQI,GAAGH,SAAQI,IAAe,IAAbC,EAAIC,GAAGF,EACjC,MAAM,QAAE/B,GAAYiC,EACfT,EAAOxB,KACVwB,EAAOxB,GAAW,CAAC,GAEhBwB,EAAOxB,GAAS6B,KACnBL,EAAOxB,GAAS6B,GAAK,CAAC,GAEnBL,EAAOxB,GAAS6B,GAAGG,KACtBR,EAAOxB,GAAS6B,GAAGG,GAAM,CAAC,GAE5BR,EAAOxB,GAAS6B,GAAGG,GAAMC,CAAE,GAC3B,IAEGT,CAAM,EAGTU,EAActC,IAElB,IAAIuC,EAAc,EAClB,MAAMC,EAAe,CAAC,EAStB,OARAX,OAAOC,QAAQ9B,GAAY+B,SAAQU,IAAgC,IAA9BC,EAAcC,GAAUF,EAC3DF,GAAeI,EAAUxC,OACzBqC,EAAaE,GAAgBC,EAAUxC,MAAM,IAG/C0B,OAAOe,KAAKJ,GAAcT,SAASE,IACjCO,EAAaP,IAAMM,CAAW,IAEzBC,CAAY,EAoBfK,EAAoBA,CAACC,EAAKC,EAAaC,KAC3C,MAAMC,EAAW,CAAC,EACZC,EAAYJ,EAAIK,IAAIH,GAAcI,QAAO,CAACC,EAAGC,IAAMD,EAAIC,GAAG,GAQhE,OAPAR,EAAIf,SAAQwB,GACV1B,OAAOC,QAAQiB,EAAYQ,IAAIxB,SAAQyB,IAAa,IAAXvB,EAAGC,GAAEsB,EAC5CP,EAAShB,IAAMgB,EAAShB,IAAM,GAAKe,EAAaO,GAAKrB,CAAC,MAE1DL,OAAOe,KAAKK,GAAUlB,SAASE,IAC7BgB,EAAShB,IAAMiB,CAAS,IAEnBD,CAAQ,EAGXQ,EAA2BA,CAACC,EAAG/B,EAAQgC,OACxCD,EAAEE,YAAeF,EAAEE,aAAejC,EAAOpB,UAAUmD,EAAEE,WAAW,IAAID,IAgHnEE,EAAmB,CACvBC,cAhJqBnC,IAErB,MAAMoC,EAAmBC,KAAKC,MAAMD,KAAKE,UAAUvC,IAE7CC,EAASF,EAAaqC,GAU5B,OATAlC,OAAOC,QAAQF,GAAQG,SAAQoC,IAA4B,IAA1B/D,EAASgE,GAAWD,EACnD,MAAM3B,EAAeF,EAAW8B,EAAWpE,YAE3C6B,OAAOwC,OAAON,EAAiBxD,WAC5B+D,QAAOC,GAAYA,EAASnE,UAAYA,IACxC2B,SAASwC,IACRA,EAAS7D,UAAY8B,CAAY,GACjC,IAECuB,CAAgB,EAmIvBS,YAAa7C,GAhHK6C,EAAC7C,EAAQgC,KAE3B,MAAMI,EAAmBC,KAAKC,MAAMD,KAAKE,UAAUvC,IAE7CC,EAASF,EAAaqC,GAGtBU,EAAqB,GAC3B5C,OAAOwC,OAAON,EAAiBxD,WAC5B+D,QAAOf,GAAKA,EAAEI,KACd5B,SAASwC,IACRE,EAAmBC,KAAKH,EAASI,KAEjCJ,EAAS7D,UAAY,CAAE,CAAC6D,EAASZ,GAAgB,IAAK,EAAG,IAG7D,MAAMiB,EAAqB/C,OAAOC,QAAQF,GAAQuB,KAAI0B,IAAkB,IAAhBF,EAAKG,GAAKD,EAChE,MAAME,EAAWlD,OAAOwC,OAAOS,EAAK9E,YACjCmD,KAAII,GAAKA,EAAEpD,SACXiD,QAAO,CAACC,EAAGC,IAAMD,EAAIC,GAAG,GAerB0B,EAAwBD,EAdFlD,OAAOwC,OAAOS,EAAKvE,WAC5C+D,QAAOW,GAAKA,EAAEtB,KACdR,KAAI8B,GAAKlB,EAAiB/D,WAAWiF,EAAEtB,GAAgB,IAAIxD,SAC3DiD,QAAO,CAACC,EAAGC,IAAMD,EAAIC,GAAG,GACJzB,OAAOwC,OAAOS,EAAK9E,YAEvCmD,KAAIO,IACFA,EAAEE,YAAc,IACdT,KAAI+B,GAAe,CAACxB,EAAGwB,KACvBZ,QAAOa,IAAA,IAAEC,EAAGF,GAAYC,EAAA,OAAKpB,EAAiBxD,UAAU2E,GAAavB,EAAe,IACpFR,KAAIkC,IAAA,IAAE3B,EAAG0B,GAAEC,EAAA,OAAK3B,CAAC,MACrB4B,OACAnC,KAAII,GAAKA,EAAEpD,SACXiD,QAAO,CAACC,EAAGC,IAAMD,EAAIC,GAAG,GAO3B,GAAI0B,GAAyBD,EAAU,CAErC,MAAMQ,EAAsB,CAAC,EAC7B1D,OAAOwC,OAAOS,EAAK9E,YAEhBsE,QAAOZ,IAAMD,EAAyBC,EAAGK,EAAkBJ,KAC3D5B,SAAS2B,IACR6B,EAAoB7B,EAAEiB,KAAOjB,CAAC,IAElC,MAAM8B,EAAclD,EAAWiD,GACzBE,EAAiB5D,OAAOe,KAAKkC,EAAK9E,YAAY0F,KAAK,MAAQ7D,OAAOe,KAAK2C,GAAqBG,KAAK,IAQvG,OAPA7D,OAAOwC,OAAOS,EAAKvE,WAChB+D,QAAOC,IAAaE,EAAmBkB,SAASpB,EAASI,OACzD5C,SAASwC,IACRA,EAASkB,eAAiBA,EAC1BlB,EAAS7D,UAAY8E,CAAW,IAG7B,CACLb,MACAiB,YAAaZ,EAAwBD,EACrCS,cAEJ,CACA,MAAO,CACLb,MACAiB,YAAaZ,EAAwBD,EACtC,IAGGc,EAAahD,EACjB+B,EAAmBN,QAAOf,GAAKA,EAAEqC,YAAc,KAC/CrC,GAAKA,EAAEiC,cACPjC,GAAKA,EAAEqC,cAkCT,OA/BAhB,EACGN,QAAOf,GAAKA,EAAEqC,YAAc,IAC5B7D,SAAQ+D,IAA2B,IAA1B,IAAEnB,EAAG,YAAEiB,GAAaE,EAC5B,MAAMhB,EAAOlD,EAAO+C,GACdY,EAAsB,CAAC,EAC7B1D,OAAOC,QAAQgD,EAAK9E,YAEjBsE,QAAOyB,IAAA,IAAEX,EAAG1B,GAAEqC,EAAA,OAAMtC,EAAyBC,EAAGK,EAAkBJ,EAAe,IACjF5B,SAAQiE,IAAqB,IAAnB/D,EAAGU,GAAUqD,EACtBT,EAAoBtD,GAAKU,CAAS,IAEtC,MAAMoC,EAAWlD,OAAOwC,OAAOkB,GAC5BpC,KAAII,GAAKA,EAAEpD,SACXiD,QAAO,CAACC,EAAGC,IAAMD,EAAIC,GAAG,GACrBkC,EAAc3C,EAClB,CACE,CAAEoD,KAAMlB,EAAUmB,IAAK5D,EAAWiD,IAClC,CAAEU,MAAO,EAAIL,EAAaM,IAAKL,KAEjCtC,GAAKA,EAAE2C,MACP3C,GAAKA,EAAE0C,OAEHR,EAAiB5D,OAAOe,KAAKkC,EAAK9E,YAAY0F,KAAK,MAAQ7D,OAAOe,KAAK2C,GAAqBG,KAAK,IACvG7D,OAAOwC,OAAOS,EAAKvE,WAChB+D,QAAOC,IAAaE,EAAmBkB,SAASpB,EAASI,OACzD5C,SAASwC,IACRA,EAASkB,eAAiBA,EAC1BlB,EAAS7D,UAAY8E,CAAW,GAChC,IAGDzB,CAAgB,EAKAS,CAAY7C,EAAQ,cAGvCwE,EAAcC,IAAA,IAAC,KAAElG,EAAI,MAAEmG,GAAOD,EAAA,OAClCE,EAAAA,cAAA,OAAKD,MAAO,CACVE,MAAO,MAAOC,OAAQ,MAAOC,gBAAiB3F,EAAUZ,MAAUmG,IAElE,EAGEK,EAAYC,IAAA,IAAC,UAAEhE,GAAWgE,EAAA,OAC9BL,EAAAA,cAAA,OACE3B,IAAKhC,EAAUgC,IACf0B,MAAO,CACLO,QAAS,OACTC,cAAe,SACfC,eAAgB,WAChBC,WAAY,WAGb,GAAGpE,EAAUzC,iBACdoG,EAAAA,cAAA,OAAKD,MAAO,CACVO,QAAS,OAAQC,cAAe,MAAOG,SAAU,OAAQC,aAAc,QAGtEC,MAAMC,KAAKD,MAAMvE,EAAUxC,SAASgD,KAAI,CAACiC,EAAGgC,IAC3Cd,EAAAA,cAACH,EAAW,CAACxB,IAAKyC,EAAGlH,KAAMyC,EAAUzC,KAAMmG,MAAO,CAAEgB,OAAQ,YAG5D,EAGFC,EAAWC,IAA2B,IAA1B,SAAEhD,EAAQ,OAAE5C,GAAQ4F,EACpC,MAAMC,EAAQ,CAAC,EASf,OARA3F,OAAOC,QAAQyC,EAAS7D,WAAWqB,SAAQ0F,IAAwB,IAAtB/E,EAAcR,GAAEuF,EAC3D,MAAM,KAAEvH,GAASyB,EAAO3B,WAAW0C,GAC9B8E,EAAMtH,KACTsH,EAAMtH,GAAQ,GAEhBsH,EAAMtH,IAASgC,CAAC,IAIhBoE,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAAA,WAAM,YAAY/B,EAASI,IAAI+C,MAAM,MACrCpB,EAAAA,cAAA,aAAQ/B,EAASkB,eAAiB,iBAAmB,MACrDa,EAAAA,cAAA,aACGzE,OAAOC,QAAQ0F,GACbG,MAAK,CAACtE,EAAGC,IAAMA,EAAE,GAAKD,EAAE,KACxBF,KAAIyE,IAAA,IAAE1H,EAAMgC,GAAE0F,EAAA,OACbtB,EAAAA,cAAA,OAAK3B,IAAKzE,EAAMmG,MAAO,CAAEO,QAAS,OAAQG,WAAY,aACpDT,EAAAA,cAACH,EAAW,CAACxB,IAAKzE,EAAMA,KAAMA,EAAMmG,MAAO,CAAEwB,YAAa,MAAOtB,MAAW,GAAJrE,KACvE,GAAGhC,MAAS4H,KAAKC,MAAU,IAAJ7F,OACpB,KAGX,EAID8F,EAAiBC,IAAqB,IAApB,WAAEjI,GAAYiI,EACpC,MAAMC,EAAiBrG,OAAOwC,OAAOrE,GACrC,OACEsG,EAAAA,cAAA,OAAKD,MAAO,CAAEO,QAAS,OAAQC,cAAe,MAAOC,eAAgB,iBAClEjF,OAAOC,QAAQ9B,GAAYmD,KAAI,CAAAgF,EAA4Bf,KAAO,IAAjC1E,EAAcC,GAAUwF,EACxD,MAAMC,EAAgBF,EAAed,EAAI,GACnCiB,EAAgBH,EAAed,EAAI,GACnCkB,EAAoB3F,EAAUvC,WAAYgI,aAAa,EAAbA,EAAehI,SACzDmI,EAAoB5F,EAAUvC,WAAYiI,aAAa,EAAbA,EAAejI,SACzDoI,EAAc,CAAC,EAWrB,OAVID,GAAqBD,KACvBE,EAAYC,aAAe,YACvBF,GAAqBD,EACvBE,EAAYE,YAAc,OAE1BF,EAAYG,YAAc,sBACxBL,EAAoB,OAAS,mDAKjChC,EAAAA,cAAA,OACE3B,IAAKjC,EACL2D,MAAO,CACLO,QAAS,OACTE,eAAgB,SAChB8B,KAAM,KACHJ,IAGLlC,EAAAA,cAAA,OACED,MAAO,CACLO,QAAS,OACTC,cAAe,SACfE,WAAY,SACZD,eAAgB,aAGlBR,EAAAA,cAACI,EAAS,CAAC/B,IAAKhC,EAAUgC,IAAKhC,UAAWA,IAC1C2D,EAAAA,cAAA,OAAKD,MAAO,CAAEI,gBAAiB,OAAQD,OAAQ,GAAID,MAAO,MAExD,IAGN,EAIJsC,EAAgBC,IAA+B,IAA9B,OAAEnH,EAAM,aAAED,GAAcoH,EAC7C,MAAMC,EAAkBlH,OAAOwC,OAAO3C,GAAc0B,QAClD,CAACC,EAAGC,IAAMzB,OAAOwC,OAAOhB,EAAErD,YAAYgJ,OAASnH,OAAOwC,OAAOf,EAAEtD,YAAYgJ,SAE7E,OACE1C,EAAAA,cAAA,OAAKD,MAAO,CAAEO,QAAS,OAAQC,cAAe,MAAOC,eAAgB,iBAClEjF,OAAOC,QAAQJ,GAAcyB,KAAI8F,IAA4B,IAA1B7I,EAASgE,GAAW6E,EACtD,MAAMC,EAAiBrH,OAAOwC,OAAOD,EAAWpE,YAC1CmJ,EAAgBtH,OAAOwC,OAAOD,EAAW7D,WAC/C,OACE+F,EAAAA,cAAA,OACE3B,IAAKvE,EACLiG,MAAO,CACLO,QAAS,OACTgC,KAAM,EACN/B,cAAe,SACfE,WAAY,UACZqC,UAAeF,EAAeF,OAASD,EAAmB,IAA/C,MAGbzC,EAAAA,cAAA,OACED,MAAO,CACLgD,UAAW,SACX5C,gBAAiB,OACjBD,OA3We,IA4WfD,MAAO,KAGXD,EAAAA,cAAA,OACED,MAAO,CACLO,QAAS,OACTE,eAAgB,eAChB8B,KAAM,IAGPO,EAAchG,KAAI,CAACoB,EAAU6C,KAC5B,MAAMkB,EAA4C,MAAxBa,EAAc/B,EAAI,GACtCmB,EAA4C,MAAxBY,EAAc/B,EAAI,GACtCoB,EAAc,CAAC,EAWrB,OAVID,GAAqBD,KACvBE,EAAYc,UAAY,YACpBf,GAAqBD,EACvBE,EAAYE,YAAc,OAE1BF,EAAYG,YAAc,sBACxBL,EAAoB,OAAS,mDAKjChC,EAAAA,cAAA,OACE3B,IAAKJ,EAASI,IACd0B,MAAO,CACLO,QAAS,OACTC,cAAe,SACfE,WAAY,SACZD,eAAgB,aAChB8B,KAAM,KACHJ,IAGLlC,EAAAA,cAAA,OAAKD,MAAO,CAAEI,gBAAiB,OAAQD,OAAQ,GAAID,MAAO,KAC1DD,EAAAA,cAACgB,EAAQ,CAAC/C,SAAUA,EAAU5C,OAAQA,IAClC,KAIR,IAGN,EAIJ4H,EAAkBC,IAAgD,IAA/C,OAAE7H,EAAM,aAAED,EAAY,gBAAE+H,GAAiBD,EAChE,MAAME,EAAmB7H,OAAOe,KAAKjB,EAAO3B,YACtC2J,EAAc9H,OAAOe,KAAKlB,GAE1BkI,EAAuB/H,OAAOwC,OAAO3C,GAAcyB,KACvD2B,GAAQjD,OAAOe,KAAKkC,EAAK9E,YAAYgJ,OAASU,EAAiBV,SAI3Da,EAAiBJ,IAAoB5F,EAAiBW,YAAc,CAAC,YAAc,GAEnFsF,GAHeL,IAAoB5F,EAAiBW,YAAc,CAAC,aAAe,IAIrFrB,KAAI,CAAClB,EAAGmF,IAAMvF,OAAOwC,OAAO1C,EAAOpB,WACjC+D,QAAOC,IAAQ,IAAAwF,EAAA,OAAe,QAAfA,EAAIxF,EAAStC,UAAE,IAAA8H,OAAA,EAAXA,EAAaf,MAAM,IACtC7F,KAAIoB,GAAYA,EAAStC,GAAGkB,KAAI6G,GAAW,CAACA,EAASzF,EAASI,SAC9DW,OACAnC,KAAI8G,IAAuB,IAArBD,EAASE,GAAMD,EACpB,MAAME,EAAoB,IAAMT,EAAiBV,OACjD,IAAIoB,EAAK,GAAMD,EAAoBT,EAAiBW,QAAQL,GAAWG,EACvE,MAEMG,EAAkB3I,EAAOpB,UAAU2J,GAAO9J,QAC1CmK,EAAYZ,EAAYU,QAAQC,GAChCE,EAAqB3I,OAAOe,KAAKlB,EAAa4I,GAAiB/J,WAC/DkK,EAAkBD,EAAmBH,QAAQH,GAC7CQ,EAAoBd,EAAqBW,GAAaC,EAAmBxB,OAAU,IAEzF,IAAI2B,EADwF,IAAtEf,EAAqBlC,MAAM,EAAG6C,GAAWnH,QAAO,CAACC,EAAGC,IAAMD,EAAIC,GAAG,GAC3C,GAAnBoH,EAAyBD,EAAkBC,EASpE,OALAN,GAA+B,GAAxBO,EAAKP,EAAK,EAAI,GAAK,GACtBtC,KAAK8C,IAAID,EAAKP,GAAM,KACtBO,GAAiC,GAA1BA,EAAKP,GAAM,GAAK,GAAK,IAGvB,CACLA,KAAIS,GAlBK,GAkBDF,KAAIG,GATH,GASOd,UAASE,QAAOa,MAAOlB,EAAezC,GACvD,MAEJ9B,OAEH,OACEgB,EAAAA,cAAA,OACEC,MAAM,OACNC,OAAO,OACPwE,MAAM,6BACN3E,MAAO,CACL4E,SAAU,WACVzE,OAAQ,OACRD,MAAO,SAGTD,EAAAA,cAAA,YACEA,EAAAA,cAAA,UAAQ4E,GAAG,YAAYC,YAAY,KAAKC,aAAa,IAAIC,KAAK,KAAKC,KAAK,MAAMC,OAAO,QACnFjF,EAAAA,cAAA,WAASkF,OAAO,uBAGnB1B,EAAkB3G,KAAIsI,IAAA,IAAC,GACtBrB,EAAE,GAAES,EAAE,GAAEF,EAAE,GAAEG,EAAE,QAAEd,EAAO,MAAEE,EAAK,MAAEa,GACjCU,EAAA,OACCnF,EAAAA,cAAA,KAAG3B,IAAKoG,GACNzE,EAAAA,cAAA,QACE3B,IAAKqF,EAAUE,EACfE,GAAI,GAAGA,KACPS,GAAI,GAAGA,KACPF,GAAI,GAAGA,KACPG,GAAI,GAAGA,KACPY,OAAO,WACPC,gBAAgB,IAChBC,UAAU,oBAEZtF,EAAAA,cAAA,QACEuF,EAAM,IAAOzB,EAAKO,GAAf,IACHmB,EAAM,IAAOjB,EAAKC,GAAf,IACHiB,WAAW,SACX1F,MAAO,CAAEqF,OAAQ,QAASM,YAAa,UAEtCjB,GAEHzE,EAAAA,cAAA,QAAMuF,EAAM,IAAOzB,EAAKO,GAAf,IAAuBmB,EAAM,IAAOjB,EAAKC,GAAf,IAAuBiB,WAAW,UAClEhB,GAED,IAEF,EAIV,MAAekB,IAA4C,IAA3C,OAAEtK,EAAM,mBAAEuK,EAAkB,MAAE7F,GAAO4F,EACnD,MAAME,EAAQ,MACR,EAACC,EAAO,EAACC,IAAaC,EAAAA,EAAAA,UAAS3K,EAAOpB,UAAU4L,GAAOvL,UAAU,IAMjE2L,EAAgBvI,KAAKC,MAAMD,KAAKE,UAAUvC,IAChD4K,EAAchM,UAAY,IACrBgM,EAAchM,UACjB,CAAC4L,GAAQ,IAAKI,EAAchM,UAAU4L,GAAQvL,UAAW,CAACwL,KAI5DvK,OAAOe,KAAK2J,EAAcvM,YAAY+B,SAASE,IAC7CsK,EAAcvM,WAAWiC,GAAG0C,IAAM1C,CAAC,IAErCJ,OAAOC,QAAQyK,EAAchM,WAAWwB,SAAQyK,IAA8B,IAA5BtH,EAAaX,GAASiI,EACtEjI,EAASI,IAAMO,EACf,CAAC,aAAanD,SAASK,KACpBmC,EAASnC,IAAO,IAAIL,SAASW,IACvB6J,EAAcvM,WAAW0C,GAAckB,aAC1C2I,EAAcvM,WAAW0C,GAAckB,WAAa,IAEtD2I,EAAcvM,WAAW0C,GAAckB,WAAWc,KAAKQ,EAAY,GACnE,GACF,IAGJ,MAAMuH,EAAY5I,EAAiBqI,GAC7BnI,EAAmB0I,EAAUF,GAC7B3K,EAASF,EAAaqC,GAE5B,OACEuC,EAAAA,cAAA,OACED,MAAO,CACLO,QAAS,OACTC,cAAe,SACfN,MAAO,MACPmG,WAAY,OACZ7E,YAAa,UACVxB,IAGLC,EAAAA,cAAA,OAAKD,MAAO,CAAE4E,SAAU,aACtB3E,EAAAA,cAACiD,EAAe,CACd5H,OAAQoC,EACRrC,aAAcE,EACd6H,gBAAiBgD,IAEnBnG,EAAAA,cAAC0B,EAAc,CAAChI,WAAY+D,EAAiB/D,aAC7CsG,EAAAA,cAACuC,EAAa,CAAClH,OAAQoC,EAAkBrC,aAAcE,KAEjC,gBAAvBsK,EACC5F,EAAAA,cAAA,YACEA,EAAAA,cAAA,WAAM,uCACyC,IAC/CA,EAAAA,cAAA,UAAQqG,SAvDYC,IAC1BP,EAAUO,EAAEC,OAAOC,MAAM,GAuDhBjL,OAAOe,KAAKjB,EAAO3B,YACjBsE,QAAOrC,IAAM,CAAC,QAAQ0D,SAAShE,EAAO3B,WAAWiC,GAAG/B,QACpDiD,KAAIlB,GACHqE,EAAAA,cAAA,UAAQ3B,IAAK1C,EAAG6K,MAAO7K,EAAG8K,SAAU9K,IAAMmK,GACvCzK,EAAO3B,WAAWiC,GAAG/B,SAI7B,cAED,KAGT,E,WChkBD,EAAe,IAA0B,oDCSzC,EAAe8B,IAAA,IAAC,KAAEgL,EAAI,SAAEC,GAAUjL,EAAA,OAChCsE,EAAAA,cAAC4G,EAAAA,EAAM,CAACD,SAAUA,GAChB3G,EAAAA,cAAC6G,EAAAA,EAAG,CACFC,MAAM,+BAGR9G,EAAAA,cAAA,MAAID,MAAO,CAAEgH,WAAWC,EAAAA,EAAAA,IAAO,KAAM,YAAa,0DAGlDhH,EAAAA,cAAA,MAAID,MAAO,CAAEgH,WAAWC,EAAAA,EAAAA,IAAO,KAAM,uCACrChH,EAAAA,cAAA,SAAG,gGAEuBA,EAAAA,cAAA,KAAGiH,KAAK,2CAA0C,QAAQ,KAEpFjH,EAAAA,cAAA,SACEA,EAAAA,cAAA,cACEA,EAAAA,cAAA,KAAGiH,KAAK,yBACNjH,EAAAA,cAAA,OAAKkH,IAAI,yDAAyDC,IAAI,qBAK5EnH,EAAAA,cAAA,MAAID,MAAO,CAAEgH,WAAWC,EAAAA,EAAAA,IAAO,KAAM,oEACrChH,EAAAA,cAAA,SAAG,+KAGYA,EAAAA,cAAA,KAAGiH,KAAK,yBAAwB,QAAS,yBAAqBjH,EAAAA,cAAA,KAAGiH,KAAK,2CAA0C,QAAQ,KAEvIjH,EAAAA,cAAA,SACEA,EAAAA,cAAA,cACEA,EAAAA,cAAA,KAAGiH,KAAK,yBACNjH,EAAAA,cAAA,OAAKkH,IAAI,iDAAiDC,IAAI,qBAKpEnH,EAAAA,cAAA,MAAID,MAAO,CAAEgH,WAAWC,EAAAA,EAAAA,IAAO,KAAM,yBAA0B,wFAE1ChH,EAAAA,cAAA,KAAGiH,KAAK,2DAA0D,uDAAuD,0FAG9IjH,EAAAA,cAACoH,EAAI,CAAC/L,OAAQ5B,EAAgBmM,mBAAmB,cAAc7F,MAAO,CAAEsH,QAAS,SAEjFrH,EAAAA,cAAA,MAAID,MAAO,CAAEgH,WAAWC,EAAAA,EAAAA,IAAO,KAAM,4DACrChH,EAAAA,cAAA,SAAG,sPAIYA,EAAAA,cAAA,KAAGiH,KAAK,4BAA2B,QAAS,yBAAqBjH,EAAAA,cAAA,KAAGiH,KAAK,6CAA4C,QAAQ,KAE5IjH,EAAAA,cAAA,SACEA,EAAAA,cAAA,cACEA,EAAAA,cAAA,KAAGiH,KAAK,4BACNjH,EAAAA,cAAA,OAAKkH,IAAI,mDAAmDC,IAAI,wBAKtEnH,EAAAA,cAAA,MAAID,MAAO,CAAEgH,WAAWC,EAAAA,EAAAA,IAAO,KAAM,wEACrChH,EAAAA,cAAA,SAAG,onBAOHA,EAAAA,cAAA,SAAG,8EAC0EA,EAAAA,cAAA,SAAG,qBAAqB,uGAGrGA,EAAAA,cAAA,SAAG,mDAC+CA,EAAAA,cAAA,KAAGiH,KAAK,+CAA8C,gBAAgB,gJAExHjH,EAAAA,cAAA,SAAG,oDACgDA,EAAAA,cAAA,KAAGiH,KAAK,gDAA+C,QAAQ,MAElHjH,EAAAA,cAAA,SACEA,EAAAA,cAAA,cACEA,EAAAA,cAAA,SAAOC,MAAM,MAAMC,OAAO,MAAMoH,UAAQ,GACtCtH,EAAAA,cAAA,UAAQkH,IAAKK,EAAY3N,KAAK,iBAKpCoG,EAAAA,cAAA,MAAID,MAAO,CAAEgH,WAAWC,EAAAA,EAAAA,IAAO,KAAM,yDACrChH,EAAAA,cAAA,SAAG,uYAKkBA,EAAAA,cAAA,KAAGiH,KAAK,6EAA4E,QAAQ,yBAAsBjH,EAAAA,cAAA,KAAGiH,KAAK,2CAA0C,QAAQ,KAIpM,C","sources":["webpack://personal-website/./src/components/interactivegrid.js","webpack://personal-website/./src/videos/north.mp4","webpack://personal-website/./src/pages/projects.js"],"sourcesContent":["import React, { useState } from 'react';\n\nconst GRID_CONNECTION_HEIGHT = 100;\n\nexport const DEFAULT_CONFIG = {\n  generators: {\n    // g1: { type: 'nuclear', energy: 2, gridKey: 'A' },\n    g2: { type: 'coal', energy: 1, gridKey: 'A' },\n    g3: { type: 'wind', energy: 1, gridKey: 'A' },\n    // g4: { type: 'wind', energy: 1, gridKey: 'A' },\n    g5: { type: 'hydro', energy: 1, gridKey: 'B' },\n  },\n  consumers: {\n    c1: {\n      type: 'household',\n      gridKey: 'A',\n      emissionFactor: null,\n      originMix: null,\n      // purchases: ['g3'],\n    },\n    c2: {\n      type: 'factory',\n      gridKey: 'A',\n      purchases: ['g3'],\n      emissionFactor: null,\n      originMix: null,\n    },\n    c3: {\n      type: 'factory',\n      gridKey: 'B',\n      // purchases: ['g4'],\n      emissionFactor: null,\n      originMix: null,\n    },\n  },\n};\n\nconst modeColor = {\n  solar: '#f27406',\n  wind: '#74cdb9',\n  hydro: '#2772b2',\n  'hydro storage': '#0052cc',\n  battery: 'lightgray',\n  'battery storage': '#b76bcf',\n  biomass: '#166a57',\n  geothermal: 'yellow',\n  nuclear: '#AEB800',\n  gas: '#bb2f51',\n  coal: '#ac8c35',\n  oil: '#867d66',\n  unknown: '#ACACAC',\n};\n\nconst configByGrid = (config) => {\n  const byGrid = {};\n  Object.entries(config).forEach(([k, v]) => {\n    Object.entries(v).forEach(([kk, vv]) => {\n      const { gridKey } = vv;\n      if (!byGrid[gridKey]) {\n        byGrid[gridKey] = {};\n      }\n      if (!byGrid[gridKey][k]) {\n        byGrid[gridKey][k] = {};\n      }\n      if (!byGrid[gridKey][k][kk]) {\n        byGrid[gridKey][k][kk] = {};\n      }\n      byGrid[gridKey][k][kk] = vv;\n    });\n  });\n  return byGrid;\n};\n\nconst averageMix = (generators) => {\n  // Compute grid average mix\n  let totalEnergy = 0;\n  const byGeneration = {};\n  Object.entries(generators).forEach(([generatorKey, generator]) => {\n    totalEnergy += generator.energy;\n    byGeneration[generatorKey] = generator.energy;\n  });\n  // Compute ratios\n  Object.keys(byGeneration).forEach((k) => {\n    byGeneration[k] /= totalEnergy;\n  });\n  return byGeneration;\n};\n\nconst locationBased = (config) => {\n  // deep copy\n  const attributedConfig = JSON.parse(JSON.stringify(config));\n  // Group by grid\n  const byGrid = configByGrid(attributedConfig);\n  Object.entries(byGrid).forEach(([gridKey, gridConfig]) => {\n    const byGeneration = averageMix(gridConfig.generators);\n    // Assign\n    Object.values(attributedConfig.consumers)\n      .filter(consumer => consumer.gridKey === gridKey)\n      .forEach((consumer) => {\n        consumer.originMix = byGeneration;\n      });\n  });\n  return attributedConfig;\n};\n\nconst loadAveragedMixes = (arr, mixAccessor, loadAccessor) => {\n  const sumByKey = {};\n  const totalLoad = arr.map(loadAccessor).reduce((a, b) => a + b, 0);\n  arr.forEach(d =>\n    Object.entries(mixAccessor(d)).forEach(([k, v]) => {\n      sumByKey[k] = (sumByKey[k] || 0) + loadAccessor(d) * v;\n    }));\n  Object.keys(sumByKey).forEach((k) => {\n    sumByKey[k] /= totalLoad;\n  });\n  return sumByKey;\n};\n\nconst generatorHasSoldContract = (g, config, contractualKey) =>\n  !(!g.purchasers || (g.purchasers && !config.consumers[g.purchasers[0]][contractualKey]));\n\nconst marketBased = (config, contractualKey) => {\n  // deep copy\n  const attributedConfig = JSON.parse(JSON.stringify(config));\n  // Group by grid\n  const byGrid = configByGrid(attributedConfig);\n\n  // first allocate all contractual instruments\n  const allocatedConsumers = [];\n  Object.values(attributedConfig.consumers)\n    .filter(d => d[contractualKey])\n    .forEach((consumer) => {\n      allocatedConsumers.push(consumer.key);\n      // assume only a single purchase\n      consumer.originMix = { [consumer[contractualKey][0]]: 1 };\n    });\n\n  const surplusMixForGrids = Object.entries(byGrid).map(([key, grid]) => {\n    const gridLoad = Object.values(grid.generators)\n      .map(d => d.energy)\n      .reduce((a, b) => a + b, 0);\n    const purchasedGeneration = Object.values(grid.consumers)\n      .filter(c => c[contractualKey])\n      .map(c => attributedConfig.generators[c[contractualKey][0]].energy)\n      .reduce((a, b) => a + b, 0);\n    const soldGeneration = Object.values(grid.generators)\n      // only consider the purchasers who purchased the right instrument\n      .map(g =>\n        (g.purchasers || [])\n          .map(consumerKey => [g, consumerKey])\n          .filter(([_, consumerKey]) => attributedConfig.consumers[consumerKey][contractualKey])\n          .map(([g, _]) => g))\n      .flat()\n      .map(d => d.energy)\n      .reduce((a, b) => a + b, 0);\n    const gridLoadAfterContract = gridLoad\n      // add purchased generation\n      + purchasedGeneration\n      // subtract sold generation\n      - soldGeneration;\n\n    if (gridLoadAfterContract >= gridLoad) {\n      // all remaining consumers get the remaining grid mix\n      const remainingGenerators = {};\n      Object.values(grid.generators)\n        // only exclude the purchasers who purchased the right instrument\n        .filter(g => !generatorHasSoldContract(g, attributedConfig, contractualKey))\n        .forEach((g) => {\n          remainingGenerators[g.key] = g;\n        });\n      const residualMix = averageMix(remainingGenerators);\n      const hasResidualMix = Object.keys(grid.generators).join('') !== Object.keys(remainingGenerators).join('');\n      Object.values(grid.consumers)\n        .filter(consumer => !allocatedConsumers.includes(consumer.key))\n        .forEach((consumer) => {\n          consumer.hasResidualMix = hasResidualMix;\n          consumer.originMix = residualMix;\n        });\n      // return the surplus mix to be used by others\n      return {\n        key,\n        surplusLoad: gridLoadAfterContract - gridLoad,\n        residualMix,\n      };\n    } \n    return {\n      key,\n      surplusLoad: gridLoadAfterContract - gridLoad,\n    };\n  });\n\n  const surplusMix = loadAveragedMixes(\n    surplusMixForGrids.filter(d => d.surplusLoad > 0),\n    d => d.residualMix,\n    d => d.surplusLoad,\n  );\n  // For each grid, assign the surplus mix to the remaining load\n  surplusMixForGrids\n    .filter(d => d.surplusLoad < 0)\n    .forEach(({ key, surplusLoad }) => {\n      const grid = byGrid[key];\n      const remainingGenerators = {};\n      Object.entries(grid.generators)\n        // only exclude the purchasers who purchased the right instrument\n        .filter(([_, g]) => !generatorHasSoldContract(g, attributedConfig, contractualKey))\n        .forEach(([k, generator]) => {\n          remainingGenerators[k] = generator;\n        });\n      const gridLoad = Object.values(remainingGenerators)\n        .map(d => d.energy)\n        .reduce((a, b) => a + b, 0);\n      const residualMix = loadAveragedMixes(\n        [\n          { load: gridLoad, mix: averageMix(remainingGenerators) },\n          { load: -1 * surplusLoad, mix: surplusMix },\n        ],\n        d => d.mix,\n        d => d.load,\n      );\n      const hasResidualMix = Object.keys(grid.generators).join('') !== Object.keys(remainingGenerators).join('');\n      Object.values(grid.consumers)\n        .filter(consumer => !allocatedConsumers.includes(consumer.key))\n        .forEach((consumer) => {\n          consumer.hasResidualMix = hasResidualMix;\n          consumer.originMix = residualMix;\n        });\n    });\n\n  return attributedConfig;\n};\n\nconst attributionRules = {\n  locationBased,\n  marketBased: config => marketBased(config, 'purchases'),\n};\n\nconst EnergyBlock = ({ type, style }) => (\n  <div style={{\n    width: '6px', height: '6px', backgroundColor: modeColor[type], ...style, \n  }}\n  />\n);\n\nconst Generator = ({ generator }) => (\n  <div\n    key={generator.key}\n    style={{\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'flex-end',\n      alignItems: 'center',\n    }}\n  >\n    {`${generator.type} generator`}\n    <div style={{\n      display: 'flex', flexDirection: 'row', flexWrap: 'wrap', marginBottom: '5px', \n    }}\n    >\n      {Array.from(Array(generator.energy)).map((_, i) => (\n        <EnergyBlock key={i} type={generator.type} style={{ margin: '1px' }} />\n      ))}\n    </div>\n  </div>\n);\n\nconst Consumer = ({ consumer, config }) => {\n  const byMix = {};\n  Object.entries(consumer.originMix).forEach(([generatorKey, v]) => {\n    const { type } = config.generators[generatorKey];\n    if (!byMix[type]) {\n      byMix[type] = 0;\n    }\n    byMix[type] += v;\n  });\n\n  return (\n    <>\n      <div>{`consumer ${consumer.key.slice(1)}`}</div>\n      <small>{consumer.hasResidualMix ? '(residual mix)' : null}</small>\n      <small>\n        {Object.entries(byMix)\n          .sort((a, b) => b[1] - a[1]) // desc\n          .map(([type, v]) => (\n            <div key={type} style={{ display: 'flex', alignItems: 'baseline' }}>\n              <EnergyBlock key={type} type={type} style={{ marginRight: '4px', width: v * 30 }} />\n              {`${type}: ${Math.round(v * 100)} %`}\n            </div>\n          ))}\n      </small>\n    </>\n  );\n};\n\nconst GridGenerators = ({ generators }) => {\n  const generatorArray = Object.values(generators);\n  return (\n    <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-around' }}>\n      {Object.entries(generators).map(([generatorKey, generator], i) => {\n        const nextGenerator = generatorArray[i + 1];\n        const prevGenerator = generatorArray[i - 1];\n        const isConnectedToNext = generator.gridKey === nextGenerator?.gridKey;\n        const isConnectedToPrev = generator.gridKey === prevGenerator?.gridKey;\n        const extraStyles = {};\n        if (isConnectedToPrev || isConnectedToNext) {\n          extraStyles.borderBottom = '1px solid';\n          if (isConnectedToPrev && isConnectedToNext) {\n            extraStyles.borderColor = '#000';\n          } else {\n            extraStyles.borderImage = `linear-gradient(to ${\n              isConnectedToNext ? 'left' : 'right'\n            }, #000 50%, rgba(0, 0, 0, 0) 50%) 100% 1`;\n          }\n        }\n        return (\n          <div\n            key={generatorKey}\n            style={{\n              display: 'flex',\n              justifyContent: 'center',\n              flex: 1, // take equal horizontal space\n              ...extraStyles,\n            }}\n          >\n            <div\n              style={{\n                display: 'flex',\n                flexDirection: 'column',\n                alignItems: 'center',\n                justifyContent: 'flex-end',\n              }}\n            >\n              <Generator key={generator.key} generator={generator} />\n              <div style={{ backgroundColor: '#000', height: 10, width: 1 }} />\n            </div>\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nconst GridConsumers = ({ config, configByGrid }) => {\n  const totalGenerators = Object.values(configByGrid).reduce(\n    (a, b) => Object.values(a.generators).length + Object.values(b.generators).length,\n  );\n  return (\n    <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-around' }}>\n      {Object.entries(configByGrid).map(([gridKey, gridConfig]) => {\n        const gridGenerators = Object.values(gridConfig.generators);\n        const gridConsumers = Object.values(gridConfig.consumers);\n        return (\n          <div\n            key={gridKey}\n            style={{\n              display: 'flex',\n              flex: 1, // take equal horizontal space\n              flexDirection: 'column',\n              alignItems: 'stretch', // children will take all horizontal space\n              flexBasis: `${(gridGenerators.length / totalGenerators) * 100}%`,\n            }}\n          >\n            <div\n              style={{\n                alignSelf: 'center',\n                backgroundColor: '#000',\n                height: GRID_CONNECTION_HEIGHT,\n                width: 1,\n              }}\n            />\n            <div\n              style={{\n                display: 'flex',\n                justifyContent: 'space-around',\n                flex: 1, // take equal horizontal space\n              }}\n            >\n              {gridConsumers.map((consumer, i) => {\n                const isConnectedToNext = gridConsumers[i + 1] != null;\n                const isConnectedToPrev = gridConsumers[i - 1] != null;\n                const extraStyles = {};\n                if (isConnectedToPrev || isConnectedToNext) {\n                  extraStyles.borderTop = '1px solid';\n                  if (isConnectedToPrev && isConnectedToNext) {\n                    extraStyles.borderColor = '#000';\n                  } else {\n                    extraStyles.borderImage = `linear-gradient(to ${\n                      isConnectedToNext ? 'left' : 'right'\n                    }, #000 50%, rgba(0, 0, 0, 0) 50%) 100% 1`;\n                  }\n                }\n                return (\n                  <div\n                    key={consumer.key}\n                    style={{\n                      display: 'flex',\n                      flexDirection: 'column',\n                      alignItems: 'center',\n                      justifyContent: 'flex-start',\n                      flex: 1, // take equal horizontal space\n                      ...extraStyles,\n                    }}\n                  >\n                    <div style={{ backgroundColor: '#000', height: 10, width: 1 }} />\n                    <Consumer consumer={consumer} config={config} />\n                  </div>\n                );\n              })}\n            </div>\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nconst AnnotationLayer = ({ config, configByGrid, attributionRule }) => {\n  const allGeneratorKeys = Object.keys(config.generators);\n  const allGridKeys = Object.keys(configByGrid);\n  // The following is the ratio occupied by each grid\n  const gridHorizontalRatios = Object.values(configByGrid).map(\n    grid => Object.keys(grid.generators).length / allGeneratorKeys.length,\n  );\n\n  const purchaseKeys = attributionRule === attributionRules.marketBased ? ['purchases'] : [];\n  const purchaseLabels = attributionRule === attributionRules.marketBased ? ['contract'] : [];\n\n  const purchaseLineSpecs = purchaseKeys\n    .map((k, i) => Object.values(config.consumers)\n      .filter(consumer => consumer[k]?.length)\n      .map(consumer => consumer[k].map(fromKey => [fromKey, consumer.key]))\n      .flat()\n      .map(([fromKey, toKey]) => {\n        const generatorInterval = 100 / allGeneratorKeys.length;\n        let x1 = 0.5 * generatorInterval + allGeneratorKeys.indexOf(fromKey) * generatorInterval;\n        const y1 = 18;\n\n        const consumerGridKey = config.consumers[toKey].gridKey;\n        const gridIndex = allGridKeys.indexOf(consumerGridKey);\n        const consumerKeysInGrid = Object.keys(configByGrid[consumerGridKey].consumers);\n        const indexWithinGrid = consumerKeysInGrid.indexOf(toKey);\n        const consumerInterval = (gridHorizontalRatios[gridIndex] / consumerKeysInGrid.length) * 100;\n        const consumerStart = gridHorizontalRatios.slice(0, gridIndex).reduce((a, b) => a + b, 0) * 100; // add the offset from potential previous grids\n        let x2 = consumerStart + consumerInterval * 0.5 + indexWithinGrid * consumerInterval;\n        const y2 = 50 + GRID_CONNECTION_HEIGHT / 10;\n\n        // Sugar\n        x1 += (x2 - x1 > 0 ? 1 : -1) * 3; // top (generator) x\n        if (Math.abs(x2 - x1) > 10) {\n          x2 += (x2 - x1 < -10 ? 1 : -1) * 3; // bottom (consumer) x\n        }\n\n        return {\n          x1, y1, x2, y2, fromKey, toKey, label: purchaseLabels[i], \n        };\n      }))\n    .flat();\n\n  return (\n    <svg\n      width=\"100%\"\n      height=\"100%\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      style={{\n        position: 'absolute',\n        height: '100%',\n        width: '100%',\n      }}\n    >\n      <defs>\n        <marker id=\"arrowhead\" markerWidth=\"10\" markerHeight=\"7\" refX=\"10\" refY=\"3.5\" orient=\"auto\">\n          <polygon points=\"0 0, 10 3.5, 0 7\" />\n        </marker>\n      </defs>\n      {purchaseLineSpecs.map(({\n        x1, y1, x2, y2, fromKey, toKey, label, \n      }) => (\n        <g key={label}>\n          <line\n            key={fromKey + toKey}\n            x1={`${x1}%`}\n            y1={`${y1}%`}\n            x2={`${x2}%`}\n            y2={`${y2}%`}\n            stroke=\"darkblue\"\n            strokeDasharray=\"4\"\n            markerEnd=\"url(#arrowhead)\"\n          />\n          <text\n            x={`${0.5 * (x1 + x2)}%`}\n            y={`${0.5 * (y1 + y2)}%`}\n            textAnchor=\"middle\"\n            style={{ stroke: 'white', strokeWidth: '0.6em' }}\n          >\n            {label}\n          </text>\n          <text x={`${0.5 * (x1 + x2)}%`} y={`${0.5 * (y1 + y2)}%`} textAnchor=\"middle\">\n            {label}\n          </text>\n        </g>\n      ))}\n    </svg>\n  );\n};\n\nexport default ({ config, attributionRuleKey, style }) => {\n  const buyer = 'c2';\n  const [seller, setSeller] = useState(config.consumers[buyer].purchases[0]);\n  const handleChangeSeller = (e) => {\n    setSeller(e.target.value);\n  };\n\n  // deep copy\n  const updatedConfig = JSON.parse(JSON.stringify(config));\n  updatedConfig.consumers = {\n    ...updatedConfig.consumers,\n    [buyer]: { ...updatedConfig.consumers[buyer], purchases: [seller] },\n  };\n\n  // Index\n  Object.keys(updatedConfig.generators).forEach((k) => {\n    updatedConfig.generators[k].key = k;\n  });\n  Object.entries(updatedConfig.consumers).forEach(([consumerKey, consumer]) => {\n    consumer.key = consumerKey;\n    ['purchases'].forEach((kk) => {\n      (consumer[kk] || []).forEach((generatorKey) => {\n        if (!updatedConfig.generators[generatorKey].purchasers) {\n          updatedConfig.generators[generatorKey].purchasers = [];\n        }\n        updatedConfig.generators[generatorKey].purchasers.push(consumerKey);\n      });\n    });\n  });\n\n  const attribute = attributionRules[attributionRuleKey];\n  const attributedConfig = attribute(updatedConfig);\n  const byGrid = configByGrid(attributedConfig);\n\n  return (\n    <div\n      style={{\n        display: 'flex',\n        flexDirection: 'column',\n        width: '90%',\n        marginLeft: 'auto',\n        marginRight: 'auto',\n        ...style,\n      }}\n    >\n      <div style={{ position: 'relative' }}>\n        <AnnotationLayer\n          config={attributedConfig}\n          configByGrid={byGrid}\n          attributionRule={attribute}\n        />\n        <GridGenerators generators={attributedConfig.generators} />\n        <GridConsumers config={attributedConfig} configByGrid={byGrid} />\n      </div>\n      {attributionRuleKey === 'marketBased' ? (\n        <span>\n          <br />\n          &quot;consumer 2&quot; has a contract with the{' '}\n          <select onChange={handleChangeSeller}>\n            {Object.keys(config.generators)\n              .filter(k => !['coal'].includes(config.generators[k].type))\n              .map(k => (\n                <option key={k} value={k} selected={k === seller}>\n                  {config.generators[k].type}\n                </option>\n              ))}\n          </select>\n          {' generator'}\n        </span>\n      ) : null}\n    </div>\n  );\n};\n","export default __webpack_public_path__ + \"static/north-2c783c57ea3eb6abed81f78007bec773.mp4\";","import React from 'react';\n\nimport Layout from '../components/layout';\nimport SEO from '../components/seo';\nimport Grid, { DEFAULT_CONFIG } from '../components/interactivegrid';\nimport { rhythm } from '../utils/typography';\n\nimport NorthVideo from '../videos/north.mp4';\n\nexport default ({ data, location }) => (\n  <Layout location={location}>\n    <SEO\n      title=\"Olivier Corradi | Projects\"\n    />\n\n    <h1 style={{ marginTop: rhythm(2) }}>Projects</h1>\n    This is a section containing projects I have worked on.\n\n    <h2 style={{ marginTop: rhythm(1) }}>Electricity Maps xbar plugin (2024)</h2>\n    <p>\n      A simple way to visualise how clean electricity is in your location.\n      Check out the blog post <a href=\"/blog/electricity-maps-macos-statusbar/\">here</a>.\n    </p>\n    <p>\n      <center>\n        <a href=\"https://polynomial.so\">\n          <img src=\"https://static.electricitymaps.com/xbar-screenshot.png\" alt=\"polynomial.so\" />\n        </a>\n      </center>\n    </p>\n\n    <h2 style={{ marginTop: rhythm(1) }}>Polynomial: A central place to track your most vital KPIs (2023)</h2>\n    <p>\n      Polynomial is the fastest way to centralize the performance indicators that matter to you.\n      Simply connect integrations, and Polynomial takes care of the rest.\n      Check it out <a href=\"https://polynomial.so\">here</a>, or contribute to it <a href=\"https://github.com/corradio/polynomial/\">here</a>.\n    </p>\n    <p>\n      <center>\n        <a href=\"https://polynomial.so\">\n          <img src=\"https://polynomial.so/static/images/social.png\" alt=\"polynomial.so\" />\n        </a>\n      </center>\n    </p>\n\n    <h2 style={{ marginTop: rhythm(1) }}>Scope 2 widget (2022)</h2>\n    It can be tricky to understand scope 2 carbon accounting rules.\n    A guide was written (<a href=\"https://www.electricitymaps.com/guides/accounting-guide\">Understanding Electricity Scope 2 Attribution Rules</a>), and a small widget was made as a complement.\n    Feel free to play around with it below:\n\n    <Grid config={DEFAULT_CONFIG} attributionRuleKey=\"marketBased\" style={{ padding: '2em' }} />\n\n    <h2 style={{ marginTop: rhythm(1) }}>footprintMap: CO₂ emissions of the global economy (2021)</h2>\n    <p>\n      footprintMap is a visualisation of the CO₂ emissions of the global economy.\n      It uses the electricityMap visualisation engine to\n      visualise various indicators about the global econonomy: GDP, population, emissions and energy supply.\n      Check it out <a href=\"https://footprintmap.org\">here</a>, or contribute to it <a href=\"https://github.com/corradio/footprintmap/\">here</a>.\n    </p>\n    <p>\n      <center>\n        <a href=\"https://footprintmap.org\">\n          <img src=\"https://footprintmap.org/images/social_image.png\" alt=\"footprintmap.org\" />\n        </a>\n      </center>\n    </p>\n\n    <h2 style={{ marginTop: rhythm(2) }}>The North app: automating your personal carbon footprint (2019-2020)</h2>\n    <p>\n      With the team at Tomorrow, we worked on the North app, which was envisioned as a way to automatically track and calculate the carbon footprint of your life.\n      It worked by connecting to apps you already used in order to track the activities you perform in your daily life.\n      For example, by connecting and parsing your emails, the app was able to detect all plane and train tickets purchased.\n      By connecting to your bank, the app was able to assess all items purchased (e.g. groceries or clothing).\n      Finally, by connecting to your smart meter or electric vehicle, the app was able to assess the time at which you used electricity.\n    </p>\n    <p>\n      As the app had access to a significant amount of sensitive content, it was <i>private by design</i>:\n      all data processing was done on the phone, and it didn&apos;t upload any information onto our servers.\n    </p>\n    <p>\n      All the carbon models and the integrations were <a href=\"https://github.com/tmrowco/northapp-contrib\">open-sourced</a> in order to create a community helping us to cover the whole ecosystem of potential integrations, and to enable trust in the carbon models.\n    </p>\n    <p>\n      North was discontinued in August 2020 (read more <a href=\"https://www.tmrow.com/blog/sunsetting-north/\">here</a>).\n    </p>\n    <p>\n      <center>\n        <video width=\"250\" height=\"445\" controls>\n          <source src={NorthVideo} type=\"video/mp4\" />\n        </video>\n      </center>\n    </p>\n\n    <h2 style={{ marginTop: rhythm(2) }}>brick: a build tool for mono-repositories (2019-2020)</h2>\n    <p>\n      Larger organisations such as Google, Facebook and Twitter have adopted the mono-repository approach as they have the means to maintain such an infrastructure,\n      but unfortunately solutions for smaller organisations are limited.\n      At electricityMap, we wanted to embrace the mono-repository structure.\n      brick was therefore built as a simple build tool for mono-repositories.\n      Read more about it <a href=\"https://electricitymap.org/blog/brick-a-build-tool-for-mono-repositories/\">here</a> and contribute to it <a href=\"https://github.com/electricitymap/brick\">here</a>.\n    </p>\n\n  </Layout>\n);\n"],"names":["DEFAULT_CONFIG","generators","g2","type","energy","gridKey","g3","g5","consumers","c1","emissionFactor","originMix","c2","purchases","c3","modeColor","solar","wind","hydro","battery","biomass","geothermal","nuclear","gas","coal","oil","unknown","configByGrid","config","byGrid","Object","entries","forEach","_ref","k","v","_ref2","kk","vv","averageMix","totalEnergy","byGeneration","_ref3","generatorKey","generator","keys","loadAveragedMixes","arr","mixAccessor","loadAccessor","sumByKey","totalLoad","map","reduce","a","b","d","_ref5","generatorHasSoldContract","g","contractualKey","purchasers","attributionRules","locationBased","attributedConfig","JSON","parse","stringify","_ref4","gridConfig","values","filter","consumer","marketBased","allocatedConsumers","push","key","surplusMixForGrids","_ref6","grid","gridLoad","gridLoadAfterContract","c","consumerKey","_ref7","_","_ref8","flat","remainingGenerators","residualMix","hasResidualMix","join","includes","surplusLoad","surplusMix","_ref9","_ref10","_ref11","load","mix","EnergyBlock","_ref12","style","React","width","height","backgroundColor","Generator","_ref13","display","flexDirection","justifyContent","alignItems","flexWrap","marginBottom","Array","from","i","margin","Consumer","_ref14","byMix","_ref15","slice","sort","_ref16","marginRight","Math","round","GridGenerators","_ref17","generatorArray","_ref18","nextGenerator","prevGenerator","isConnectedToNext","isConnectedToPrev","extraStyles","borderBottom","borderColor","borderImage","flex","GridConsumers","_ref19","totalGenerators","length","_ref20","gridGenerators","gridConsumers","flexBasis","alignSelf","borderTop","AnnotationLayer","_ref21","attributionRule","allGeneratorKeys","allGridKeys","gridHorizontalRatios","purchaseLabels","purchaseLineSpecs","_consumer$k","fromKey","_ref22","toKey","generatorInterval","x1","indexOf","consumerGridKey","gridIndex","consumerKeysInGrid","indexWithinGrid","consumerInterval","x2","abs","y1","y2","label","xmlns","position","id","markerWidth","markerHeight","refX","refY","orient","points","_ref23","stroke","strokeDasharray","markerEnd","x","y","textAnchor","strokeWidth","_ref24","attributionRuleKey","buyer","seller","setSeller","useState","updatedConfig","_ref25","attribute","marginLeft","onChange","e","target","value","selected","data","location","Layout","SEO","title","marginTop","rhythm","href","src","alt","Grid","padding","controls","NorthVideo"],"sourceRoot":""}