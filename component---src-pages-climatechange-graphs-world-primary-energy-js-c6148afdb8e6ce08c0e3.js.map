{"version":3,"sources":["webpack:///./node_modules/d3-fetch/src/text.js","webpack:///./node_modules/d3-array/src/ascending.js","webpack:///./node_modules/d3-array/src/bisector.js","webpack:///./node_modules/d3-array/src/bisect.js","webpack:///./node_modules/d3-array/src/cross.js","webpack:///./node_modules/d3-array/src/descending.js","webpack:///./node_modules/d3-array/src/number.js","webpack:///./node_modules/d3-array/src/array.js","webpack:///./node_modules/d3-array/src/range.js","webpack:///./node_modules/d3-array/src/ticks.js","webpack:///./node_modules/d3-array/src/threshold/sturges.js","webpack:///./node_modules/d3-array/src/quantile.js","webpack:///./node_modules/d3-array/src/mean.js","webpack:///./node_modules/d3-array/src/sum.js"],"names":["responseText","response","ok","Error","status","statusText","text","fetch","input","init","then","a","b","NaN","f","compare","length","d","x","ascending","left","lo","hi","mid","right","ascendingBisect","bisector","bisectRight","bisect","Array","prototype","slice","map","start","stop","step","n","arguments","i","Math","max","ceil","range","e10","sqrt","e5","e2","reverse","ticks","count","tickIncrement","isFinite","floor","power","log","LN10","error","pow","tickStep","step0","abs","step1","valueof","number","values","p","i0","value0","value","m","sum","isNaN"],"mappings":"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","file":"component---src-pages-climatechange-graphs-world-primary-energy-js-c6148afdb8e6ce08c0e3.js","sourcesContent":["function responseText(response) {\n  if (!response.ok) throw new Error(response.status + \" \" + response.statusText);\n  return response.text();\n}\n\nexport default function (input, init) {\n  return fetch(input, init).then(responseText);\n}","export default function (a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}","import ascending from \"./ascending\";\nexport default function (compare) {\n  if (compare.length === 1) compare = ascendingComparator(compare);\n  return {\n    left: function left(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) < 0) lo = mid + 1;else hi = mid;\n      }\n\n      return lo;\n    },\n    right: function right(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) > 0) hi = mid;else lo = mid + 1;\n      }\n\n      return lo;\n    }\n  };\n}\n\nfunction ascendingComparator(f) {\n  return function (d, x) {\n    return ascending(f(d), x);\n  };\n}","import ascending from \"./ascending\";\nimport bisector from \"./bisector\";\nvar ascendingBisect = bisector(ascending);\nexport var bisectRight = ascendingBisect.right;\nexport var bisectLeft = ascendingBisect.left;\nexport default bisectRight;","import { pair } from \"./pairs\";\nexport default function (values0, values1, reduce) {\n  var n0 = values0.length,\n      n1 = values1.length,\n      values = new Array(n0 * n1),\n      i0,\n      i1,\n      i,\n      value0;\n  if (reduce == null) reduce = pair;\n\n  for (i0 = i = 0; i0 < n0; ++i0) {\n    for (value0 = values0[i0], i1 = 0; i1 < n1; ++i1, ++i) {\n      values[i] = reduce(value0, values1[i1]);\n    }\n  }\n\n  return values;\n}","export default function (a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n}","export default function (x) {\n  return x === null ? NaN : +x;\n}","var array = Array.prototype;\nexport var slice = array.slice;\nexport var map = array.map;","export default function (start, stop, step) {\n  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n  var i = -1,\n      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n      range = new Array(n);\n\n  while (++i < n) {\n    range[i] = start + i * step;\n  }\n\n  return range;\n}","var e10 = Math.sqrt(50),\n    e5 = Math.sqrt(10),\n    e2 = Math.sqrt(2);\nexport default function (start, stop, count) {\n  var reverse,\n      i = -1,\n      n,\n      ticks,\n      step;\n  stop = +stop, start = +start, count = +count;\n  if (start === stop && count > 0) return [start];\n  if (reverse = stop < start) n = start, start = stop, stop = n;\n  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];\n\n  if (step > 0) {\n    start = Math.ceil(start / step);\n    stop = Math.floor(stop / step);\n    ticks = new Array(n = Math.ceil(stop - start + 1));\n\n    while (++i < n) {\n      ticks[i] = (start + i) * step;\n    }\n  } else {\n    start = Math.floor(start * step);\n    stop = Math.ceil(stop * step);\n    ticks = new Array(n = Math.ceil(start - stop + 1));\n\n    while (++i < n) {\n      ticks[i] = (start - i) / step;\n    }\n  }\n\n  if (reverse) ticks.reverse();\n  return ticks;\n}\nexport function tickIncrement(start, stop, count) {\n  var step = (stop - start) / Math.max(0, count),\n      power = Math.floor(Math.log(step) / Math.LN10),\n      error = step / Math.pow(10, power);\n  return power >= 0 ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power) : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);\n}\nexport function tickStep(start, stop, count) {\n  var step0 = Math.abs(stop - start) / Math.max(0, count),\n      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n      error = step0 / step1;\n  if (error >= e10) step1 *= 10;else if (error >= e5) step1 *= 5;else if (error >= e2) step1 *= 2;\n  return stop < start ? -step1 : step1;\n}","export default function (values) {\n  return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\n}","import number from \"./number\";\nexport default function (values, p, valueof) {\n  if (valueof == null) valueof = number;\n  if (!(n = values.length)) return;\n  if ((p = +p) <= 0 || n < 2) return +valueof(values[0], 0, values);\n  if (p >= 1) return +valueof(values[n - 1], n - 1, values);\n  var n,\n      i = (n - 1) * p,\n      i0 = Math.floor(i),\n      value0 = +valueof(values[i0], i0, values),\n      value1 = +valueof(values[i0 + 1], i0 + 1, values);\n  return value0 + (value1 - value0) * (i - i0);\n}","import number from \"./number\";\nexport default function (values, valueof) {\n  var n = values.length,\n      m = n,\n      i = -1,\n      value,\n      sum = 0;\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (!isNaN(value = number(values[i]))) sum += value;else --m;\n    }\n  } else {\n    while (++i < n) {\n      if (!isNaN(value = number(valueof(values[i], i, values)))) sum += value;else --m;\n    }\n  }\n\n  if (m) return sum / m;\n}","export default function (values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      sum = 0;\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (value = +values[i]) sum += value; // Note: zero and null are equivalent.\n    }\n  } else {\n    while (++i < n) {\n      if (value = +valueof(values[i], i, values)) sum += value;\n    }\n  }\n\n  return sum;\n}"],"sourceRoot":""}